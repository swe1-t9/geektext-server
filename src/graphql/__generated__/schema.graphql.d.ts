/**
 * This file was automatically generated by Nexus 0.11.7
 * Do not make changes to this file directly
 */


import { core } from "nexus"
declare global {
  interface NexusGenCustomDefinitionMethods<TypeName extends string> {
    emailAddress<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "EmailAddress";
    postalCode<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "PostalCode";
    sensitiveString<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "SensitiveString";
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Address: { // root type
    address_line_1: string; // String!
    address_line_2?: string | null; // String
    address_line_3?: string | null; // String
    city: string; // String!
    id: string; // ID!
    postal_code: string; // PostalCode!
    region?: string | null; // String
  }
  Query: {};
  ShippingInformation: { // root type
    selected_shipping_address_id?: string | null; // ID
    shipping_addresses: NexusGenRootTypes['Address'][]; // [Address!]!
  }
  User: { // root type
    email_address: string; // EmailAddress!
    first_name: string; // String!
    id: string; // ID!
    last_name: string; // String!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  EmailAddress: string;
  PostalCode: string;
  SensitiveString: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
}

export interface NexusGenFieldTypes {
  Address: { // field return type
    address_line_1: string; // String!
    address_line_2: string | null; // String
    address_line_3: string | null; // String
    city: string; // String!
    id: string; // ID!
    postal_code: string; // PostalCode!
    region: string | null; // String
  }
  Query: { // field return type
    hello_world: string; // String!
  }
  ShippingInformation: { // field return type
    selected_shipping_address_id: string | null; // ID
    shipping_addresses: NexusGenRootTypes['Address'][]; // [Address!]!
  }
  User: { // field return type
    email_address: string; // EmailAddress!
    first_name: string; // String!
    id: string; // ID!
    last_name: string; // String!
    shipping_information: NexusGenRootTypes['ShippingInformation']; // ShippingInformation!
  }
}

export interface NexusGenArgTypes {
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Address" | "Query" | "ShippingInformation" | "User";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "EmailAddress" | "Float" | "ID" | "Int" | "PostalCode" | "SensitiveString" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: {};
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}